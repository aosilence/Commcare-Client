package commcare.capstone.comcare.webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 10/6/2017 10:03:52 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import java.util.List;
import org.ksoap2.SoapEnvelope;
import org.ksoap2.SoapFault;
import org.ksoap2.serialization.SoapSerializationEnvelope;
import org.ksoap2.transport.HttpTransportSE;
import org.ksoap2.HeaderProperty;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;
import android.os.AsyncTask;
import org.ksoap2.serialization.MarshalFloat;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import commcare.capstone.comcare.view.LoginActivity;

import static android.webkit.ConsoleMessage.MessageLevel.LOG;

public class ComCareService {

    Logger LOG = LoggerFactory.getLogger(LoginActivity.class);

    public String NAMESPACE ="http://webservices.comcare.com";
    public String url="";
    public int timeOut = 1000;
    public IWsdl2CodeEvents eventHandler;
    public WS_Enums.SoapProtocolVersion soapVersion;

    public ComCareService(){}
    
    public ComCareService(IWsdl2CodeEvents eventHandler)
    {
        this.eventHandler = eventHandler;
    }
    public ComCareService(IWsdl2CodeEvents eventHandler,String url)
    {
        this.eventHandler = eventHandler;
        this.url = url;
    }
    public ComCareService(IWsdl2CodeEvents eventHandler,String url,int timeOutInSeconds)
    {
        this.eventHandler = eventHandler;
        this.url = url;
        this.setTimeOut(timeOutInSeconds);
    }
    public void setTimeOut(int seconds){
        this.timeOut = seconds * 1000;
    }
    public void setUrl(String url){
        this.url = url;
    }

    
    public LoginResponse login(LoginRequest request) throws Exception{
        return login(request, null);
    }
    
    public LoginResponse login(LoginRequest request,List<HeaderProperty> headers) throws Exception{
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://webservices.comcare.com","login");
        //soapEnvelope.addMapping("http://webservices.comcare.com","request",new LoginRequest().getClass());
        soapReq.addProperty("request",request);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("urn:login", soapEnvelope,headers);
            }else{
                httpTransport.call("urn:login", soapEnvelope);
            }
            LOG.debug("login Response: "+soapEnvelope.bodyIn);
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                LOG.error("login Fault: "+fault.faultstring);
                throw ex;
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    LoginResponse resultVariable =  new LoginResponse (j);
                    return resultVariable;
                    
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            throw e;
        }
        return null;
    }

    public DataResponse getVisits(DataRequest req) throws Exception{
        return getVisits(req, null);
    }

    public DataResponse getVisits(DataRequest req,List<HeaderProperty> headers) throws Exception{
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = true;
        SoapObject soapReq = new SoapObject("http://webservices.comcare.com","getVisits");
        soapEnvelope.addMapping("http://webservices.comcare.com","req",new DataRequest().getClass());
        soapReq.addProperty("req",req);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        try{
            if (headers!=null){
                httpTransport.call("urn:getVisits", soapEnvelope,headers);
            }else{
                httpTransport.call("urn:getVisits", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            LOG.debug("getVisits "+soapEnvelope.bodyIn);
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                throw ex;
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    DataResponse resultVariable =  new DataResponse (j);
                    return resultVariable;

                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            throw e;
        }
        return null;
    }
    
}
